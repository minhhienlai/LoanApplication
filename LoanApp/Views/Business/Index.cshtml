@using SharedClassLibrary.Models
@model IEnumerable<BusinessModel>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@{
    var ownerId = ViewData["OwnerId"];
}
<p>
    <a asp-action="Create" asp-route-ownerId="@ownerId">Create New </a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BusinessCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BusinessCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" asp-route-ownerId="@ownerId">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.Id" asp-route-ownerId="@ownerId" onclick="return confirm('Are you sure you want to delete this?')">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<div>
    <a asp-action="Index" asp-controller="List">Back to List</a>
</div>
